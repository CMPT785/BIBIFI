name: CodeQL

on:
  push:
    branches: [ main, test-patch-1 ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 6'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Build code
      run: |
        sudo apt-get install -y build-essential
        g++ -std=c++17 -O2 -I include -o bin/fileserver src/main.cpp src/shell.cpp src/fs_utils.cpp

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   needs: analyze

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Run tests
  #     run: |
  #       # Add your test commands here
  #       echo "Running tests..."

  create_artifact:
    name: Create Artifact
    runs-on: ubuntu-latest
    needs: analyze #test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build code
      run: |
        sudo apt-get install -y build-essential
        g++ -std=c++17 -O2 -I include -o bin/fileserver src/main.cpp src/shell.cpp src/fs_utils.cpp

    - name: Upload build artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: fileserver
        path: bin/fileserver

    # - name: Create Release
    #   id: create_release
    #   if: github.event_name == 'push'
    #   uses: actions/create-release@v1
    #   with:
    #     tag_name: v${{ github.run_number }}
    #     release_name: Release ${{ github.run_number }}
    #     draft: false
    #     prerelease: false
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Upload Release Asset
    #   if: github.event_name == 'push'
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: bin/fileserver
    #     asset_name: fileserver
    #     asset_content_type: application/octet-stream
